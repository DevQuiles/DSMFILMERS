@model WebApplication2.Models.PlayList_PeliculasViewModel

@{
    ViewData["Title"] = "Details";
}

@{
    UsuarioViewModel usuario = Context.Session.Get<UsuarioViewModel>("usuario");
    string nombre = "";
    string email = "";
    if (usuario != null)
    {
        nombre = usuario.Nombre;
        email = usuario.Email;
    }
}


<style>
    .playlist-container {
        background-color: #333;
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 10px;
    }

    body {
        background-color: white;
    }

    /* Estilos para los botones */
    .btn-create {
        background-color: green;
        color: black;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        margin-right: 5px;
    }

    .btn-return {
        background-color: blue;
        color: White;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        margin-right: 5px;
    }
</style>


<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.11.2/css/all.css">
</head>


<div>
    <h2>@Model.Playlist.nombre</h2>
    <hr />
    <p>@Model.Playlist.Descripcion</p>

    <div>
        <a class="btn btn-primary" href="@Url.Action("Index", "Pelicula")">Añadir Película</a>
    </div>

    <div class="row mt-4">
        @if (Model.Pelicula.Any())
        {
            @foreach (var movie in Model.Pelicula)
            {
                <div class="col-md-3 mb-4">
                    <div class="card-img-container">
                        <span class="delete-badge">
                            <i class="bi bi-trash text-danger btnDesAsignar" data-pelicula-id="@movie.Id"></i>
                        </span>
                        <a href="@Url.Action("Details", "Pelicula", new { id = movie.Id })">
                            <img src="@movie.caratula" class="card-img-top img-fluid" alt="Carátula">
                        </a>
                    </div>
                </div>
            }
        }
        else
        {
            <p>¡No has añadido ninguna película a tu playlist todavía!</p>
        }
    </div>

</div>

<div>
    <a href="@Url.Action("Edit", new { id = Model.Playlist.Id })" class="btn btn-success btn-edit" title="Edit">
        <i class="fas fa-edit"></i>
    </a>
    <a href="@Url.Action("Index")" class="btn btn-primary btn-return">
        <i class="fas fa-arrow-left"></i> Volver
    </a>
</div>

<script>

    var usuario = {
        nombre: '@nombre',
        email: '@email'
    };

    document.addEventListener("DOMContentLoaded", function () {
        var botonesDesAsignar = document.querySelectorAll(".btnDesAsignar");

        botonesDesAsignar.forEach(function (boton) {
            boton.addEventListener("click", function () {
                // Obtener el ID de la película desde el atributo data
                var idPelicula = boton.dataset.peliculaId;
                var idPlaylist = @Model.Playlist.Id ;

                // Llamar a la función y pasar ambos parámetros
                desAsignarPeliculaDePlaylist(idPelicula, idPlaylist);
            });
        });
    });

    function desAsignarPeliculaDePlaylist(idPelicula, idPlaylist) {
        // Realizar la llamada AJAX al controlador
        $.ajax({
            url: '/Playlist/desAsignar',
            type: 'POST',
            data: { idPelicula: idPelicula, idPlaylist: idPlaylist },
            success: function (result) {
                // Manejar el éxito de la llamada AJAX
                // console.log(result);
                window.location.href = '/Playlist/Details/' + idPlaylist;

            },
            error: function (error) {
                // Manejar el error de la llamada AJAX
                console.error("Error al llamar al controlador:", error);
            }
        });
    }
</script>